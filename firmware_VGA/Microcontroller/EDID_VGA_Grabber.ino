#include "SoftI2CMaster.h"
#include <Wire.h>

// Write address for VGA Capture Chip
#define ADDR9883  0B01001100 // When Select pin grounded, this is the address
#define SEL_9883 8 // Select Pin

// First Command, set 800 wide
#define CMD1      0x01 // Register address
#define CMD2      0x42 // 1055 pixels (800 + porch) is 0x42
#define CMD3      0xF0

// Second command set HSYNC width to 128 pixels
#define CMD4      0x07 // Register address
#define CMD5      0x80 // 128 Pixels wide sync pulse

// Second phase offset
#define CMD6      0x04 // Register address
#define CMD7      0B01000000 // only first 5 bits, default is 01000XXX

// 800x600 @ 60Hz with a made up model name.
 const byte edid[128] =
{ 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x41, 0xd0, 0x21, 0x43, 0xc0, 0x09, 0xe7, 0x00,
  0x20, 0x1b, 0x01, 0x03, 0x20, 0x0c, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00,
  0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x31, 0x35, 0x31,
  0x34, 0x31, 0x33, 0x31, 0x32, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17
};

// MiniCore ATMega328p: https://github.com/MCUdude/MiniCore
// Paperback's Conversion board uses SDA for pin 9 and SCL for pin 10
const int sdaPin = 9;
const int sclPin = 10;
SoftI2CMaster i2c = SoftI2CMaster( sclPin, sdaPin, 1 );

// Real HArdware i2C Port now
byte data = -1;
const int i2c_port = 0x50; // i2c Port for Monitor EDID

void setup()
{
  pinMode(SEL_9883, OUTPUT);
  digitalWrite(SEL_9883, LOW);

  i2c.beginTransmission(ADDR9883);
  i2c.write(CMD1);
  i2c.write(CMD2);
  i2c.write(CMD3);
  i2c.endTransmission();

  i2c.beginTransmission(ADDR9883);
  i2c.write(CMD4);
  i2c.write(CMD5);
  i2c.endTransmission();

  i2c.beginTransmission(ADDR9883);
  i2c.write(CMD6);
  i2c.write(CMD7);
  i2c.endTransmission();

  // Listen for EDID requests
  Wire.begin(i2c_port);
  Wire.onRequest(gotEvent);
  Wire.onReceive(gotData);
}

void gotEvent()
{
  Wire.write(edid, 128);
}


void gotData(int byteCount)
{
  while (Wire.available()) {
    data = Wire.read();
  }
}

void loop() {} // We don't need it.
